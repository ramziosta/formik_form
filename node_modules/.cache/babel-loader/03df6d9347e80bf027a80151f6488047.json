{"ast":null,"code":"var _jsxFileName = \"/Users/ramziosta/Downloads/formik_form/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // TODO: import useFormik from formik library\n\nimport \"../src/index.css\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  // TODO: add a const called formik assigned to useFormik()\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: values => {\n      console.log('form:', values);\n    },\n    validate: values => {\n      let errors = {}; // if(!values.name) errors.name = \"Name Field is required\"\n\n      if (!values.email) errors.email = \"Username should be an email format\";\n      if (!values.password) errors.password = \"Password Field is required\";\n      if (values.password && values.email) alert('Login Successful');\n      return errors;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onSubmit: formik.handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"User Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          onChange: formik.handleChange,\n          values: formik.values.email,\n          placeholder: \"Enter email for UserName\",\n          id: \"emailField\",\n          class: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"emailError\",\n          style: {\n            color: 'red'\n          },\n          children: formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 32\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"password\",\n          onChange: formik.handleChange,\n          values: formik.values.password,\n          placeholder: \"Enter password\",\n          id: \"pswField\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"pswError\",\n          style: {\n            color: 'red'\n          },\n          children: formik.errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 36\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          id: \"submitBtn\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ramziosta/Downloads/formik_form/src/App.js"],"names":["React","useFormik","App","formik","initialValues","name","email","password","onSubmit","values","console","log","validate","errors","alert","handleSubmit","handleChange","color"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,kBAAP;AACA,SAAQC,SAAR,QAAwB,QAAxB;;AAGA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B;AACA,QAAMC,MAAM,GAAGF,SAAS,CAAC;AACvBG,IAAAA,aAAa,EAAC;AACZC,MAAAA,IAAI,EAAC,EADO;AAEZC,MAAAA,KAAK,EAAC,EAFM;AAGZC,MAAAA,QAAQ,EAAC;AAHG,KADS;AAMvBC,IAAAA,QAAQ,EAAEC,MAAM,IAAI;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,MAArB;AACD,KARsB;AASvBG,IAAAA,QAAQ,EAAEH,MAAM,IAAI;AAClB,UAAII,MAAM,GAAC,EAAX,CADkB,CAElB;;AACA,UAAG,CAACJ,MAAM,CAACH,KAAX,EAAkBO,MAAM,CAACP,KAAP,GAAe,oCAAf;AAClB,UAAG,CAACG,MAAM,CAACF,QAAX,EAAqBM,MAAM,CAACN,QAAP,GAAkB,4BAAlB;AACrB,UAAGE,MAAM,CAACF,QAAP,IAAmBE,MAAM,CAACH,KAA7B,EAAoCQ,KAAK,CAAC,kBAAD,CAAL;AACpC,aAAOD,MAAP;AACD;AAhBsB,GAAD,CAAxB;AAkBA,sBACE;AAAK,IAAA,QAAQ,EAAEV,MAAM,CAACY,YAAtB;AAAA,2BACA;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,gCAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,IAAI,EAAC,OAAzB;AAAiC,UAAA,QAAQ,EAAEZ,MAAM,CAACa,YAAlD;AAAgE,UAAA,MAAM,EAAEb,MAAM,CAACM,MAAP,CAAcH,KAAtF;AAA6F,UAAA,WAAW,EAAC,0BAAzG;AAAoI,UAAA,EAAE,EAAC,YAAvI;AAAoJ,UAAA,KAAK;AAAzJ;AAAA;AAAA;AAAA;AAAA,gBAPF,EAQGH,MAAM,CAACU,MAAP,CAAcP,KAAd,gBAAsB;AAAK,UAAA,EAAE,EAAC,YAAR;AAAqB,UAAA,KAAK,EAAE;AAACW,YAAAA,KAAK,EAAC;AAAP,WAA5B;AAAA,oBAA4Cd,MAAM,CAACU,MAAP,CAAcP;AAA1D;AAAA;AAAA;AAAA;AAAA,gBAAtB,GAA+F,IARlG,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,UAAxB;AAAmC,UAAA,QAAQ,EAAEH,MAAM,CAACa,YAApD;AAAkE,UAAA,MAAM,EAAEb,MAAM,CAACM,MAAP,CAAcF,QAAxF;AAAkG,UAAA,WAAW,EAAC,gBAA9G;AAA+H,UAAA,EAAE,EAAC;AAAlI;AAAA;AAAA;AAAA;AAAA,gBAXF,EAYIJ,MAAM,CAACU,MAAP,CAAcN,QAAd,gBAAyB;AAAK,UAAA,EAAE,EAAC,UAAR;AAAmB,UAAA,KAAK,EAAE;AAACU,YAAAA,KAAK,EAAC;AAAP,WAA1B;AAAA,oBAA0Cd,MAAM,CAACU,MAAP,CAAcN;AAAxD;AAAA;AAAA;AAAA;AAAA,gBAAzB,GAAmG,IAZvG,eAcE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,EAAE,EAAC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GA1CuBL,G;UAEPD,S;;;KAFOC,G","sourcesContent":["import React from \"react\";\r\n// TODO: import useFormik from formik library\r\nimport \"../src/index.css\"\r\nimport {useFormik} from \"formik\"\r\n\r\n\r\nexport default function App() {\r\n  // TODO: add a const called formik assigned to useFormik()\r\n  const formik = useFormik({\r\n    initialValues:{\r\n      name:\"\",\r\n      email:\"\",\r\n      password:\"\",\r\n    },\r\n    onSubmit: values => {\r\n      console.log('form:', values);\r\n    },\r\n    validate: values => {\r\n      let errors={};\r\n      // if(!values.name) errors.name = \"Name Field is required\"\r\n      if(!values.email) errors.email = \"Username should be an email format\"\r\n      if(!values.password) errors.password = \"Password Field is required\"\r\n      if(values.password && values.email) alert('Login Successful')\r\n      return errors;\r\n    }\r\n  })\r\n  return (\r\n    <div onSubmit={formik.handleSubmit}>\r\n    <main>\r\n      <form className=\"form\">\r\n        {/* <div>Name</div>\r\n        <input type=\"text\" name=\"name\" onChange={formik.handleChange} values={formik.values.name} placeholder=\"Enter name\" />\r\n        {formik.errors.name ? <div style={{color:'red'}}>{formik.errors.name}</div> : \"Login Successful\"}\r\n */}\r\n\r\n        <div>User Name</div>\r\n        <input type=\"email\" name=\"email\" onChange={formik.handleChange} values={formik.values.email} placeholder=\"Enter email for UserName\" id=\"emailField\" class />\r\n        {formik.errors.email ? <div id=\"emailError\" style={{color:'red'}}>{formik.errors.email}</div> : null}\r\n\r\n        <div>Password</div>\r\n        <input type=\"text\" name=\"password\" onChange={formik.handleChange} values={formik.values.password} placeholder=\"Enter password\" id=\"pswField\" />\r\n         {formik.errors.password ? <div id=\"pswError\" style={{color:'red'}}>{formik.errors.password}</div> : null}\r\n\r\n        <button type=\"submit\" id=\"submitBtn\">Submit</button>\r\n      </form>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}